/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Metodos.Arbol;
import Metodos.SimularArbol;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import java.applet.AudioClip;
import sun.audio.*;
import java.io.*;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;

/**
 *
 * @author Olman
 */
public class GUI extends javax.swing.JFrame {

    Fondo fondo = new Fondo();
    Arbol arbol = new Arbol();
    private SimularArbol simulador = new SimularArbol();

    /**
     * Creates new form GUI2
     */
    public GUI() {
         //MenuSound();
        this.setContentPane(fondo); //Cambia el fondo del programa.
       
        initComponents();       
        this.setTitle("Arbol Binario by Olman Davila Solano"); //TÃ­tulo de la ventana de la GUI.
        this.setLocationRelativeTo(this);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDesktopPane = new javax.swing.JDesktopPane();
        jInternalFrame = new javax.swing.JInternalFrame();
        txt_Insertar = new javax.swing.JTextField();
        btn_Insertar = new javax.swing.JButton();
        btn_Eliminar = new javax.swing.JButton();
        txt_eliminarNodo = new javax.swing.JTextField();
        label_Evento = new javax.swing.JLabel();
        label_Evento1 = new javax.swing.JLabel();
        label_Evento2 = new javax.swing.JLabel();
        btn_Salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Old English Text MT", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Arbol binario");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jDesktopPane.setForeground(new java.awt.Color(255, 255, 255));
        jDesktopPane.setFont(new java.awt.Font("Juice ITC", 0, 14)); // NOI18N
        jDesktopPane.setOpaque(false);

        jInternalFrame.setIconifiable(true);
        jInternalFrame.setMaximizable(true);
        jInternalFrame.setResizable(true);
        jInternalFrame.setEnabled(false);
        jInternalFrame.setFocusCycleRoot(false);
        jInternalFrame.setVisible(true);

        javax.swing.GroupLayout jInternalFrameLayout = new javax.swing.GroupLayout(jInternalFrame.getContentPane());
        jInternalFrame.getContentPane().setLayout(jInternalFrameLayout);
        jInternalFrameLayout.setHorizontalGroup(
            jInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );
        jInternalFrameLayout.setVerticalGroup(
            jInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        jDesktopPane.add(jInternalFrame);
        jInternalFrame.setBounds(20, 10, 700, 320);
        jInternalFrame.getAccessibleContext().setAccessibleDescription("");

        txt_Insertar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_Insertar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Insertar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_InsertarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_InsertarKeyTyped(evt);
            }
        });

        btn_Insertar.setBackground(new java.awt.Color(51, 130, 117));
        btn_Insertar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btn_Insertar.setText("Insertar");
        btn_Insertar.setBorder(null);
        btn_Insertar.setEnabled(false);
        btn_Insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Insertarbtn_Insertar1ActionPerformed(evt);
            }
        });

        btn_Eliminar.setBackground(new java.awt.Color(51, 130, 117));
        btn_Eliminar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btn_Eliminar.setText("Eliminar");
        btn_Eliminar.setBorder(null);
        btn_Eliminar.setEnabled(false);
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Eliminarbtn_Eliminar1ActionPerformed(evt);
            }
        });

        txt_eliminarNodo.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_eliminarNodo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_eliminarNodo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_eliminarNodoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_eliminarNodoKeyTyped(evt);
            }
        });

        label_Evento.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        label_Evento.setForeground(java.awt.Color.green);
        label_Evento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        label_Evento1.setFont(new java.awt.Font("Old English Text MT", 1, 18)); // NOI18N
        label_Evento1.setForeground(java.awt.Color.blue);
        label_Evento1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_Evento1.setText("Inserte una letra:");

        label_Evento2.setFont(new java.awt.Font("Old English Text MT", 1, 18)); // NOI18N
        label_Evento2.setForeground(java.awt.Color.blue);
        label_Evento2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_Evento2.setText("Elimine una letra:");

        btn_Salir.setBackground(new java.awt.Color(51, 130, 117));
        btn_Salir.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btn_Salir.setText("Salir");
        btn_Salir.setBorder(null);
        btn_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Salirbtn_Eliminar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jDesktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(label_Evento, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_Evento1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_eliminarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(label_Evento2)))))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btn_Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_Evento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_Evento1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_Evento2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_eliminarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btn_Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_Insertarbtn_Insertar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Insertarbtn_Insertar1ActionPerformed
       MenuSound();
        String letra = this.txt_Insertar.getText();
        letra = letra.toUpperCase(); //Se pasa a mayuscula

        //Funcion para recorrer la letra digitada en el arbol binario y devolver si encontro la letra digitada
        if (arbol.Buscar(letra) == true) { 
            RisaWav();
            this.label_Evento.setForeground(Color.red);
            this.label_Evento.setText(letra + " se encuentra en el arbol!");
            

        } else { //Si no se encuentra se inserta
            ExcelentWAV();
            arbol.insertar(letra); //Metodo para insertar en el arbol
            if (simulador.insertar(letra)) { //Metodo para insertar en el grafico
                repintarArbol();
                
                this.label_Evento.setForeground(Color.GREEN);
                this.label_Evento.setText(letra + " insertada correctamente!");
                
            }

        }

        txt_Insertar.setText("");
        btn_Insertar.setEnabled(false);
    }//GEN-LAST:event_btn_Insertarbtn_Insertar1ActionPerformed

    private void txt_InsertarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_InsertarKeyTyped
        Character c = evt.getKeyChar();

        if (!Character.isLetter(c) || c == KeyEvent.VK_SPACE) { //VÃ¡lida que solo se ingrese letras.
            
            evt.consume();
        }
        if (txt_Insertar.getText().length() == 1) {  // VÃ¡lida que se ingrese solo 1 carÃ¡cter
            evt.consume();
        }
    }//GEN-LAST:event_txt_InsertarKeyTyped

    private void txt_InsertarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_InsertarKeyReleased
        KeyWAV();
        if (!txt_Insertar.getText().isEmpty()) {
            btn_Insertar.setEnabled(true);
        } else {
            btn_Insertar.setEnabled(false);
        }
    }//GEN-LAST:event_txt_InsertarKeyReleased

    private void txt_eliminarNodoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_eliminarNodoKeyTyped
        KeyWAV();
        Character c = evt.getKeyChar();

        if (!Character.isLetter(c) || c == KeyEvent.VK_SPACE) { //VÃ¡lida que solo se ingrese letras.
          
            evt.consume();
        }
        if (txt_eliminarNodo.getText().length() == 1) {  // VÃ¡lida que se ingrese solo 1 carÃ¡cter
            evt.consume();
        }
    }//GEN-LAST:event_txt_eliminarNodoKeyTyped

    private void txt_eliminarNodoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_eliminarNodoKeyReleased
        if (!txt_eliminarNodo.getText().isEmpty()) {
            btn_Eliminar.setEnabled(true);
        } else {
            btn_Eliminar.setEnabled(false);
        }
    }//GEN-LAST:event_txt_eliminarNodoKeyReleased

    private void btn_Eliminarbtn_Eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Eliminarbtn_Eliminar1ActionPerformed
        String letra = txt_eliminarNodo.getText();
        letra = letra.toUpperCase();

        if (arbol.Buscar(letra) == false) { 
            //Si no encuentra el nodo digitado a eliminar
             RisaWav();
            this.label_Evento.setForeground(Color.red);
            this.label_Evento.setText("Nodo no encontrado en el arbol!");
        } else {
            //Si encuentra el nodo digitado a eliminar
            if (arbol.eliminar(letra) == true) {
                 //Si encuentra el nodo digitado es hoja
                if (this.simulador.arbol.eliminar(letra)) {
                    ExcelentWAV();
                    //Repinta el arbol de nuevo
                    repintarArbol();               
                    this.label_Evento.setForeground(Color.magenta);
                    this.label_Evento.setText(letra + " eliminada correctamente!");
                    

                }
            } else {
                  //Si encuentra el nodo digitado tiene hijos no lo eliminada
                RisaWav();
                this.label_Evento.setForeground(Color.red);
                this.label_Evento.setText("No es posible eliminar un nodo con hijos!");
            }
        }
        txt_eliminarNodo.setText("");
        btn_Eliminar.setEnabled(false);
    }//GEN-LAST:event_btn_Eliminarbtn_Eliminar1ActionPerformed

    private void btn_Salirbtn_Eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Salirbtn_Eliminar1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_Salirbtn_Eliminar1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        MenuSound();
    }//GEN-LAST:event_formWindowActivated

    /**
 * Autor del Metodo para dibujar el arbol 2D
 * Roberto Toloza - Graficar arbol binario de busqueda en Java
 * https://youtu.be/iRH-9eAiYr0
 * 
 * Se adapto el metodo al proyecto de Olman DÃ¡vila Solano
 * 
 */
    private void repintarArbol() {

        this.jDesktopPane.removeAll();
        Rectangle tamaÃ±o = this.jInternalFrame.getNormalBounds();
        this.jInternalFrame = null;
        this.jInternalFrame = new JInternalFrame("Grafico 2D", true);
        this.jDesktopPane.add(this.jInternalFrame, JLayeredPane.TOP_ALIGNMENT);
        this.jInternalFrame.setVisible(true);
        this.jInternalFrame.setBounds(tamaÃ±o);
        this.jInternalFrame.setEnabled(false);
        this.jInternalFrame.add(simulador.getDibujo(), BorderLayout.CENTER);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    //Fuciones para los efectos de sonido de Mortal Kombat 4, Tomados de Zedge
    public void ExcelentWAV(){
      AudioClip sonido;
      sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Media/MK-Excellent.wav"));
      sonido.play();              
    }
    
    public void RisaWav(){
      AudioClip sonido;
      sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Media/MK4-Risa.wav"));
      sonido.play();          
    }
    
    public void KeyWAV(){
      AudioClip sonido;
      sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Media/MK4-Keysound.wav"));
      sonido.play();            
    }
    
    public void MenuSound(){
      AudioClip sonido;
      sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Media/MK4-MainMenu.wav"));
      sonido.loop(); 
      
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Eliminar;
    private javax.swing.JButton btn_Insertar;
    private javax.swing.JButton btn_Salir;
    private javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JInternalFrame jInternalFrame;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JLabel label_Evento;
    public javax.swing.JLabel label_Evento1;
    public javax.swing.JLabel label_Evento2;
    private javax.swing.JTextField txt_Insertar;
    private javax.swing.JTextField txt_eliminarNodo;
    // End of variables declaration//GEN-END:variables

    class Fondo extends JPanel { //Clase creada para poner fondo al JFrame.

        private Image imagen;

        @Override
        public void paint(Graphics grafico) { 
            imagen = new ImageIcon(getClass().getResource("/Media/darkArbol.jpg")).getImage();
            grafico.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(grafico);
        }
    }

}
